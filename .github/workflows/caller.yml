name: Caller Repo

on:
    workflow_dispatch:
      inputs:
        python-version:
          required: false
          type: string
          default: '3.11'
        node-version:
          required: false
          type: string
          default: '20'
        release-version:
          required: false
          type: string
          default: '0.0.0'

jobs:
    collect-data:
        runs-on: ubuntu-latest
        outputs:
            repository_name: ${{ github.repository }}
            version: ${{ inputs.release-version || '0.0.1'}}
            release_type: Manual
            checksum_data: ${{ steps.set-checksum-data.outputs.checksum_data }}
            user: ${{ github.actor }}
            team_name: test
            organization: test
            sbom: ${{ steps.set-json.outputs.sbom_content }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set Checksum Data
              id: set-checksum-data
              run: |
                echo "checksum_data=[{'sha-256':'vxshdcfsgh', 'file_path':'/path'},\
                {'sha-256':'vxshdcfsgh', 'file_path':'/path'}]" >> $GITHUB_OUTPUT
              shell: bash

            - name: Generate Input JSON
              id: set-json
              run: |
                echo '{"data1": "123", "data2": "456"}' > input.json
                echo "sbom_content=$(cat input.json)" >> $GITHUB_OUTPUT
              shell: bash

            - name: View github output
              run: |
                echo "${{ steps.set-checksum-data.outputs.checksum_data}}"
              shell: bash
    send-data:
        needs: [collect-data]
        uses: MonikaSinghal-22/Repo2-action-test/.github/workflows/api_workflow.yml@master
        with:
            repository_name: ${{ needs.collect-data.outputs.repository_name}}
            version: ${{needs.collect-data.outputs.version}}
            release_type: ${{needs.collect-data.outputs.release_type}}
            checksum_data: ${{needs.collect-data.outputs.checksum_data}}
            user: ${{ needs.collect-data.outputs.user }}
            team_name: ${{ needs.collect-data.outputs.team_name }}
            organization: ${{ needs.collect-data.outputs.organization}}
            input-data: ${{ needs.collect-data.outputs.sbom }}